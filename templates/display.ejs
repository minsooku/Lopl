<!DOCTYPE html>
<html>
<head>
    <title>Favorite Places</title>
    <link rel="stylesheet" href="display.css">
</head>
<body>
    <div class="main">
        <h1><a href="/">LOPL</a> | My Favorite Places</h1>

        <div class="hr-line"><hr></div>

        <% favoritePlaces.forEach(function(place) { %>
            <div>
                <h2><%= place.title %></h2>
                <p><b>Category:</b> <%= place.category %></p>
                <b>Description:</b>
                <p><%= place.description %></p>
                <b>Address:</b>
                <p id="<%= place.placeId %>"></p>
                <div class="hr-line"><hr></div>
            </div>
        <% }); %>
    
        <button id="reset">Remove All Favorite Places</button>
    
        <div class="hr-line"><hr></div>

        Search for a location:
        <input id="search" type="text" placeholder="Type address..." style=" width: 500px;">

        <div id="map" style="height: 400px; width: 100%;"></div>
        <div class="hr-line"><hr></div>

        <a href="/"><u>HOME</u></a>
    </div>

    <script>
        document.getElementById('reset').addEventListener('click', function() {
            var confirmDelete = confirm('Are you sure you want to remove all?');
            if (confirmDelete) {
                fetch('/reset', { method: 'POST' })
                .then(() => location.reload());
            }
        });

        // Pass the place IDs from EJS to JavaScript
        var placeIds = <%- JSON.stringify(favoritePlaces.map(place => place.placeId)) %>;

        function initMap() {
            var defaultLocation = { lat: 38.9072, lng: -77.0369 }; // Washington D.C. coordinates
            var mapOptions = {
                zoom: 10,
                center: defaultLocation
            };
            var map = new google.maps.Map(document.getElementById('map'), mapOptions);
            var geocoder = new google.maps.Geocoder();

            // Use the place IDs in JavaScript
            var delay = 0; // Initialize delay
            placeIds.forEach(function(placeId) {
                setTimeout(function() {
                    geocodePlaceId(geocoder, placeId);
                }, delay); // Add a delay between each request
                delay += 200; // Increase the delay for the next request (200ms)
            });

            function geocodePlaceId(geocoder, placeId) {
                geocoder
                    .geocode({ placeId: placeId })
                    .then(({ results }) => {
                        if (results[0]) {
                            document.getElementById(placeId).innerText = results[0].formatted_address;
                        } else {
                            window.alert("No results found");
                        }
                    })
            }

            var input = document.getElementById('search');
            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (!place.geometry || !place.geometry.location) {
                    window.alert("Please select a location from the autocomplete suggestions.");
                    return;
                }

                // Move the map to the selected place
                map.setCenter(place.geometry.location);
                map.setZoom(15);

                // Add a marker at the selected place
                var marker = new google.maps.Marker({
                    position: place.geometry.location,
                    map: map
                });
            });
        }
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB9DBNjGy3fctPZRf_4K2aG1XhCbu-8PHQ&libraries=places&callback=initMap">
    </script>
</body>
</html>
